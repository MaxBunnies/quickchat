
var quickchat_busy = false
var pending_alert = null

// $("#quickchat-input").on('keypress', function(){
//   $(this).val($(this).val().replace(/[\r\n\v]+/g, ''));
// });

var preloader = {"v":"5.5.2","fr":30,"ip":0,"op":30,"w":500,"h":500,"nm":"合成 1","ddd":0,"assets":[],"layers":[{"ddd":0,"ind":1,"ty":4,"nm":"形状图层 3","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[407,215,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":1,"k":[{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"t":0,"s":[48,48]},{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"t":20,"s":[48,48]},{"t":30,"s":[72,72]}],"ix":2,"x":"var $bm_rt;\nvar amp, freq, decay, n, n, t, t, v;\namp = 0.1;\nfreq = 2;\ndecay = 2;\n$bm_rt = n = 0;\nif (numKeys > 0) {\n    $bm_rt = n = nearestKey(time).index;\n    if (key(n).time > time) {\n        n--;\n    }\n}\nif (n == 0) {\n    $bm_rt = t = 0;\n} else {\n    $bm_rt = t = $bm_sub(time, key(n).time);\n}\nif (n > 0) {\n    v = velocityAtTime($bm_sub(key(n).time, $bm_div(thisComp.frameDuration, 10)));\n    $bm_rt = $bm_sum(value, $bm_div($bm_mul($bm_mul(v, amp), Math.sin($bm_mul($bm_mul($bm_mul(freq, t), 2), Math.PI))), Math.exp($bm_mul(decay, t))));\n} else {\n    $bm_rt = value;\n}"},"p":{"a":0,"k":[0,0],"ix":3},"nm":"椭圆路径 1","mn":"ADBE Vector Shape - Ellipse","hd":false},{"ty":"fl","c":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":0,"s":[0.768627464771,0.784313738346,0.800000011921,1]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":20,"s":[0.768627464771,0.784313738346,0.800000011921,1]},{"t":30,"s":[0.388235300779,0.403921574354,0.419607847929,1]}],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[-28,36],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"椭圆 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":150,"st":0,"bm":0},{"ddd":0,"ind":2,"ty":4,"nm":"形状图层 2","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[279,215,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":1,"k":[{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"t":0,"s":[48,48]},{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"t":10,"s":[48,48]},{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"t":20,"s":[72,72]},{"t":30,"s":[48,48]}],"ix":2,"x":"var $bm_rt;\nvar amp, freq, decay, n, n, t, t, v;\namp = 0.1;\nfreq = 2;\ndecay = 2;\n$bm_rt = n = 0;\nif (numKeys > 0) {\n    $bm_rt = n = nearestKey(time).index;\n    if (key(n).time > time) {\n        n--;\n    }\n}\nif (n == 0) {\n    $bm_rt = t = 0;\n} else {\n    $bm_rt = t = $bm_sub(time, key(n).time);\n}\nif (n > 0) {\n    v = velocityAtTime($bm_sub(key(n).time, $bm_div(thisComp.frameDuration, 10)));\n    $bm_rt = $bm_sum(value, $bm_div($bm_mul($bm_mul(v, amp), Math.sin($bm_mul($bm_mul($bm_mul(freq, t), 2), Math.PI))), Math.exp($bm_mul(decay, t))));\n} else {\n    $bm_rt = value;\n}"},"p":{"a":0,"k":[0,0],"ix":3},"nm":"椭圆路径 1","mn":"ADBE Vector Shape - Ellipse","hd":false},{"ty":"fl","c":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":0,"s":[0.768627464771,0.784313738346,0.800000011921,1]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":20,"s":[0.388235300779,0.403921574354,0.419607847929,1]},{"t":30,"s":[0.768627464771,0.784313738346,0.800000011921,1]}],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[-28,36],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"椭圆 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":150,"st":0,"bm":0},{"ddd":0,"ind":3,"ty":4,"nm":"形状图层 1","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[151,215,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":1,"k":[{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"t":0,"s":[48,48]},{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"t":10,"s":[72,72]},{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"t":20,"s":[48,48]},{"t":30,"s":[48,48]}],"ix":2,"x":"var $bm_rt;\nvar amp, freq, decay, n, n, t, t, v;\namp = 0.1;\nfreq = 2;\ndecay = 2;\n$bm_rt = n = 0;\nif (numKeys > 0) {\n    $bm_rt = n = nearestKey(time).index;\n    if (key(n).time > time) {\n        n--;\n    }\n}\nif (n == 0) {\n    $bm_rt = t = 0;\n} else {\n    $bm_rt = t = $bm_sub(time, key(n).time);\n}\nif (n > 0) {\n    v = velocityAtTime($bm_sub(key(n).time, $bm_div(thisComp.frameDuration, 10)));\n    $bm_rt = $bm_sum(value, $bm_div($bm_mul($bm_mul(v, amp), Math.sin($bm_mul($bm_mul($bm_mul(freq, t), 2), Math.PI))), Math.exp($bm_mul(decay, t))));\n} else {\n    $bm_rt = value;\n}"},"p":{"a":0,"k":[0,0],"ix":3},"nm":"椭圆路径 1","mn":"ADBE Vector Shape - Ellipse","hd":false},{"ty":"fl","c":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":0,"s":[0.768627464771,0.784313738346,0.800000011921,1]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":10,"s":[0.388235300779,0.403921574354,0.419607847929,1]},{"t":20,"s":[0.768627464771,0.784313738346,0.800000011921,1]}],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[-28,36],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"椭圆 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":150,"st":0,"bm":0}],"markers":[]}


var SCENARIO_ID = document.getElementById("quickchat_script").getAttribute("scenario_id")
var API_SERVER_URL = "api.app.quickchat.ai:80" 
var WWW_SERVER_URL = "www.quickchat.ai"
var AVATAR_DIR_URL = "https://app.quickchat.ai/media/chat_avatars"
var HUMAN_OPERATOR = false
var CUSTOM_COLOR = "#007bff"
var API_KEY = null

document.head.insertAdjacentHTML('beforeend',`
	<link rel="stylesheet" href="https://${WWW_SERVER_URL}/user_kit/quickchat.css" type="text/css" />
`);

var script = document.createElement('script');
script.src = 'https://unpkg.com/@lottiefiles/lottie-player@latest/dist/lottie-player.js';
script.type = 'text/javascript';

function isHidden(e) {
    var style = window.getComputedStyle(e);
    return (style.display === 'none')
}

function showPreloader(show) {
	if (show) {
		// if (document.getElementById("warning-message")) {
		// 	document.getElementById("warning-message").insertAdjacentHTML('beforebegin',`<lottie-player id="quickchat-preloader" background="transparent" speed="1" loop autoplay></lottie-player>`)
		// } else {
			document.getElementById("quickchat-messages").insertAdjacentHTML('beforeend',`<lottie-player id="quickchat-preloader" background="transparent" speed="1" loop autoplay></lottie-player>`)
		// }
		document.getElementById("quickchat-messages").scroll({ top: document.getElementById("quickchat-messages").scrollHeight, behavior: 'smooth' })
		setTimeout(function(){ document.getElementById("quickchat-preloader").load(preloader) }, 10);
	} else {
		if (document.getElementById("quickchat-preloader") !== null) {
			document.getElementById("quickchat-preloader").remove()
		}
	}
}

function appendMessage(text, chat_avatar, delay, show_preloader) {
	setTimeout(function() {
		// document.getElementById("warning-message").insertAdjacentHTML('beforebegin',`
		document.getElementById("quickchat-messages").insertAdjacentHTML('beforeend',`
		<div class="message-container">
	        <img id="quickchat-avatar-img" src='${AVATAR_DIR_URL}/${chat_avatar}' class="quickchat-profile-picture-sm" />
	        <div class="quickchat-status-sm"></div>
	        <p class='quickchat-message bot'>${text}</p>
	    </div>`)

	    var preloader_delay = show_preloader ? 1000 : 0
		setTimeout(function(){ 
	    	showPreloader(show_preloader)
	    }, preloader_delay);

	    document.getElementById("quickchat-messages").scroll({ top: document.getElementById("quickchat-messages").scrollHeight, behavior: 'smooth' })
	}, delay)
}

var first_open = true
var initial_messages = {}
function appendInitialMessages() {
	if (first_open) {
		if (Array.isArray(initial_messages["opener"])) {
			for (var i = 0; i < initial_messages["opener"].length; i++) {
				appendMessage(initial_messages["opener"][i][0], initial_messages["chat_avatar"], initial_messages["opener"][i][1], i < initial_messages["opener"].length - 1)
			}
		} else {
			appendMessage(initial_messages["opener"], initial_messages["chat_avatar"], 0, false)
		}
		first_open = false
	}
}

(function(funcName, baseObj) {
    // The public function name defaults to window.docReady
    // but you can pass in your own object and own function name and those will be used
    // if you want to put them in a different namespace
    funcName = funcName || "docReady";
    baseObj = baseObj || window;
    var readyList = [];
    var readyFired = false;
    var readyEventHandlersInstalled = false;

    // call this when the document is ready
    // this function protects itself against being called more than once
    function ready() {
        if (!readyFired) {
            // this must be set to true before we start calling callbacks
            readyFired = true;
            for (var i = 0; i < readyList.length; i++) {
                // if a callback here happens to add new ready handlers,
                // the docReady() function will see that it already fired
                // and will schedule the callback to run right after
                // this event loop finishes so all handlers will still execute
                // in order and no new ones will be added to the readyList
                // while we are processing the list
                readyList[i].fn.call(window, readyList[i].ctx);
            }
            // allow any closures held by these functions to free
            readyList = [];
        }
    }

    function readyStateChange() {
        if ( document.readyState === "complete" ) {
            ready();
        }
    }

    // This is the one public interface
    // docReady(fn, context);
    // the context argument is optional - if present, it will be passed
    // as an argument to the callback
    baseObj[funcName] = function(callback, context) {
        if (typeof callback !== "function") {
            throw new TypeError("callback for docReady(fn) must be a function");
        }
        // if ready has already fired, then just schedule the callback
        // to fire asynchronously, but right away
        if (readyFired) {
            setTimeout(function() {callback(context);}, 1);
            return;
        } else {
            // add the function and context to the list
            readyList.push({fn: callback, ctx: context});
        }
        // if document already ready to go, schedule the ready function to run
        if (document.readyState === "complete") {
            setTimeout(ready, 1);
        } else if (!readyEventHandlersInstalled) {
            // otherwise if we don't have event handlers installed, install them
            if (document.addEventListener) {
                // first choice is DOMContentLoaded event
                document.addEventListener("DOMContentLoaded", ready, false);
                // backup is window load event
                window.addEventListener("load", ready, false);
            } else {
                // must be IE
                document.attachEvent("onreadystatechange", readyStateChange);
                window.attachEvent("onload", ready);
            }
            readyEventHandlersInstalled = true;
        }
    }
})("docReady", window);

// window.onload = function() {
docReady(function() {
	API_KEY = document.body.hasAttribute("api_key") && document.body.getAttribute("api_key").length > 0 && document.body.getAttribute("api_key") != 'None' ? document.body.getAttribute("api_key") : SCENARIO_ID

	document.body.appendChild(script);

	document.body.insertAdjacentHTML('beforeend',`
	<div id="quickchat-button" style="display: none">
      <svg style="height: 34px; width: 34px" id="quickchat-fa-comment-dots" aria-hidden="true" focusable="false" data-prefix="fas" data-icon="comment-dots" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" class="svg-inline--fa fa-comment-dots fa-w-16 fa-3x"><path fill="currentColor" d="M256 32C114.6 32 0 125.1 0 240c0 49.6 21.4 95 57 130.7C44.5 421.1 2.7 466 2.2 466.5c-2.2 2.3-2.8 5.7-1.5 8.7S4.8 480 8 480c66.3 0 116-31.8 140.6-51.4 32.7 12.3 69 19.4 107.4 19.4 141.4 0 256-93.1 256-208S397.4 32 256 32zM128 272c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm128 0c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm128 0c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z" class=""></path></svg>
      <svg style="height: 26px; width: 18px" id="quickchat-fa-times" aria-hidden="true" focusable="false" data-prefix="fas" data-icon="times" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 352 512" class="svg-inline--fa fa-times fa-w-11 fa-3x"><path fill="currentColor" d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z" class=""></path></svg>
      <div id="quickchat-status"></div>
    </div>
    <div id="quickchat-intro-div" onclick="maximizeChat(event)">
      <p id="quickchat-popup-text"></p>
      <div id="quickchat-triangle"></div>
    </div>
    <div id="quickchat-modal-div" scenario_id="" conv_id="" style="display: none">
      <button id="quickchat-btn-minimize" onclick="minimizeChat(event)">
        <svg style="height: 16px; width :16px" aria-hidden="true" focusable="false" data-prefix="fas" data-icon="window-minimize" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" class="svg-inline--fa fa-window-minimize fa-w-16 fa-3x"><path fill="currentColor" d="M464 352H48c-26.5 0-48 21.5-48 48v32c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48v-32c0-26.5-21.5-48-48-48z" class=""></path></svg>
      </button>
      <div id="quickchat-modal-body">
	      <div id="quickchat-header">
	        <h5 id="quickchat-first-header"></h5>
	        <p id="quickchat-second-header"></p>
	      </div>
	      <div id="quickchat-messages">
	      	<p id="warning-message"></p>
	      </div>
      </div>
      <div id="quickchat-footer">
      	<a id="quickchat-livechat-url" target="_blank" rel="noopener"><button id="quickchat-talk-to-human"><svg id="quickchat-icon-human" aria-hidden="true" focusable="false" data-prefix="fas" data-icon="user" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" class="svg-inline--fa fa-user fa-w-14 fa-3x"><path fill="currentColor" d="M224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4z" class=""></path></svg></button></a>
      	<div id="quickchat-input-container"> 
          <textarea id="quickchat-input" placeholder="" maxlength="250"></textarea>
          <button id="quickchat-send-msg-btn">
            <svg style="height: 16px; width: 16px" aria-hidden="true" focusable="false" data-prefix="fas" data-icon="paper-plane" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" class="svg-inline--fa fa-paper-plane fa-w-16 fa-3x"><path fill="currentColor" d="M476 3.2L12.5 270.6c-18.1 10.4-15.8 35.6 2.2 43.2L121 358.4l287.3-253.2c5.5-4.9 13.3 2.6 8.6 8.3L176 407v80.5c0 23.6 28.5 32.9 42.5 15.8L282 426l124.6 52.2c14.2 6 30.4-2.9 33-18.2l72-432C515 7.8 493.3-6.8 476 3.2z" class=""></path></svg>
          </button>
      	</div>
      	<p id="quickchat-powered-by">Powered by <a href="https://quickchat.ai/" target="_blank" id="quickchat-link">Quickchat.ai</a></p>
	  </div>
    </div>`)

	document.getElementById("quickchat-input").addEventListener("keydown", event => {
		if (event.keyCode === 13) {
			event.preventDefault();
		}
	});

	document.getElementById("quickchat-input").addEventListener("keyup", event => {
		autosize(document.getElementById("quickchat-input"))
	    if (event.keyCode === 13 && !quickchat_busy) {
	    	sendMessageToAPI()
	    }
	});

	document.getElementById("quickchat-send-msg-btn").addEventListener("click", event => {
		sendMessageToAPI()
	})

	var xmlhttp = new XMLHttpRequest();
    xmlhttp.onreadystatechange = function() {
        if (xmlhttp.readyState == XMLHttpRequest.DONE) {   // XMLHttpRequest.DONE == 4
        	if (xmlhttp.status == 200) {
        		var data = JSON.parse(xmlhttp.response)
        		initial_messages = {opener: data["opener"], chat_avatar: data["chat_avatar"]}
        		CUSTOM_COLOR = data["custom_color"]

        		document.getElementById("quickchat-modal-div").setAttribute("scenario_id", SCENARIO_ID)
				document.getElementById("quickchat-modal-div").setAttribute("conv_id", data["conv_id"])
				document.getElementById("quickchat-first-header").innerHTML = data["first_header"]
				if (data["second_header"]) {
					document.getElementById("quickchat-second-header").innerHTML = (data["second_header"])
				} else {
					document.getElementById("quickchat-second-header").remove()
				}
				if (data["livechat_url"]) {
					document.getElementById("quickchat-livechat-url").setAttribute("href", data["livechat_url"])
				} else {
					document.getElementById("quickchat-livechat-url").remove()
				}
				if (document.getElementById("warning-message") != null) document.getElementById("warning-message").innerHTML = data["background_text"]
				document.getElementById("quickchat-popup-text").innerHTML = data["popup_text"]
				document.getElementById("quickchat-input").setAttribute("placeholder", data["chat_input_placeholder"])

				
				document.getElementById("quickchat-button").style.backgroundColor = CUSTOM_COLOR
				document.getElementById("quickchat-button").setAttribute("onclick", "maximizeChat(event)")
				document.getElementById("quickchat-button").style.display = "flex"

				setTimeout(function(){ 
					if (isHidden(document.getElementById("quickchat-modal-div"))) {
						document.getElementById("quickchat-intro-div").style.display = "block";
						document.getElementById("quickchat-intro-div").animate([ {transform: 'translateX(50px)'}, {opacity: 1} ], { duration: 200, easing: "ease-in" })
						setTimeout(function(){ 
							document.getElementById("quickchat-intro-div").style.opacity = 1;
						}, 200);
					}
				}, 1000);

				const ws = new WebSocket(`wss://${API_SERVER_URL}/ws/conv_id/${data["conv_id_encr"]}/`.replaceAll("=", ""));
  				ws.onopen = function(e) {};
  				ws.onmessage = function(e, d) { handleWebsocketPush(JSON.parse(e.data)); };
  				ws.onerror = function(e) {};
  				ws.onclose = function(e) {};
           }
        }
    };
    xmlhttp.open("POST", `https://${API_SERVER_URL}/init/`, true);
    var params = `scenario_id=${SCENARIO_ID}&api_key=${API_KEY}`
    xmlhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
    xmlhttp.send(params);
})

function handleWebsocketPush(payload) {
	if (payload['type'] == 'push.message') {
		publishPushedMessage(payload['content'])
	}
	if (payload['type'] == 'push.pause') {
		handlePushedPause(payload['content'])
	}
}

function publishPushedMessage(content) {
	if (document.getElementById("quickchat-message-footnote") != null) document.getElementById("quickchat-message-footnote").remove()
	document.getElementById("quickchat-messages").insertAdjacentHTML('beforeend',`
        <div class='message-container'>
            <img src='${document.getElementById("quickchat-avatar-img").getAttribute("src")}' class='quickchat-profile-picture-sm' />
            <div class='quickchat-status-sm'></div>
            <p class='quickchat-message bot'>${content['msg']['text']}</p>
        </div>`)
    document.getElementById("quickchat-messages").scroll({ top: document.getElementById("quickchat-messages").scrollHeight, behavior: 'smooth' })
}

function handlePushedPause(content) {
	HUMAN_OPERATOR = content['human_operator']
	alert = HUMAN_OPERATOR ? `You're now talking to a Human` : `You're now talking to an AI`
	if (quickchat_busy == false) {
		document.getElementById("quickchat-messages").insertAdjacentHTML('beforeend',`<p class="quickchat-messages-alert"><span>${alert}</span></p>`)
		document.getElementById("quickchat-messages").scroll({ top: document.getElementById("quickchat-messages").scrollHeight, behavior: 'smooth' })
	} else {
		pending_alert = alert
	}
}

function minimizeChat(e) {
	e.stopPropagation()
	document.body.classList.remove("quickchat-noscroll")
	// document.getElementById("quickchat-modal-div").animate({ bottom: '50px', opacity: 0 }, "fast", "swing")
	document.getElementById("quickchat-modal-div").style.bottom = "75px"
	document.getElementById("quickchat-modal-div").animate([ {transform: 'translateY(-25px)'}, {opacity: 0} ], { duration: 200, easing: "ease-out" })
	setTimeout(function(){ 
		document.getElementById("quickchat-modal-div").style.display = "none"
		document.getElementById("quickchat-modal-div").style.opacity = 0
		document.getElementById("quickchat-button").setAttribute("onclick", "maximizeChat(event)")
	}, 200);
	document.getElementById("quickchat-button").style.backgroundColor = CUSTOM_COLOR
	document.getElementById("quickchat-button").setAttribute("onclick","")
	document.getElementById("quickchat-fa-comment-dots").style.display = "block"
	document.getElementById("quickchat-status").style.display = "block"
	document.getElementById("quickchat-fa-times").style.display = "none"
	// $("#quickchat-modal-div").animate({ bottom: '-520px' })
	// setTimeout(function(){ 
	// 	$("#quickchat-modal-div").addClass("minimized")
	// 	$("#quickchat-header h5").css("color","#fff")
	// 	$("#quickchat-header p").css("color","#fff")
	// 	$("#quickchat-modal-div").attr("onclick","maximizeChat()")
	// }, 500);
}

function maximizeChat(e) {
	appendInitialMessages()
	e.stopPropagation()
	document.body.classList.add("quickchat-noscroll")
	document.getElementById("quickchat-intro-div").style.display = "none"
	// document.getElementById("quickchat-modal-div").animate({ bottom: '100px', opacity: 1 }, "fast", "swing")
	document.getElementById("quickchat-modal-div").style.display = "flex"
	document.getElementById("quickchat-modal-div").style.bottom = "100px"
	document.getElementById("quickchat-modal-div").animate([ {transform: 'translateY(25px)'}, {opacity: 1} ], { duration: 200, easing: "ease-in" })
	setTimeout(function(){ 
		document.getElementById("quickchat-modal-div").style.opacity = 1
		document.getElementById("quickchat-button").setAttribute("onclick", "minimizeChat(event)")
	}, 200);
	document.getElementById("quickchat-button").style.backgroundColor = "#fff"
	document.getElementById("quickchat-button").setAttribute("onclick", "")
	document.getElementById("quickchat-fa-comment-dots").style.display = "none"
	document.getElementById("quickchat-status").style.display = "none"
	document.getElementById("quickchat-fa-times").style.display = "block"
	// document.getElementById("quickchat-input").focus()
	// $("#quickchat-modal-div").animate({ bottom: '0px' })
	// $("#quickchat-modal-div").removeClass("minimized")
	// $("#quickchat-header h5").css("color","#000")
	// $("#quickchat-header p").css("color","#000")
	// $("#quickchat-modal-div").attr("onclick","")
}

function sendMessageToAPI() {

	var currentdate = new Date(); 
	var minutes = currentdate.getMinutes() < 10 ? "0" + currentdate.getMinutes() : currentdate.getMinutes()
	var time_now = currentdate.getHours() + ":" + minutes
	var message = document.getElementById("quickchat-input").value.replaceAll("&", "and")

	if (message.trim().length > 0) {

		document.getElementById("quickchat-input").value = ""
		document.getElementById("quickchat-input").style.height = "35px"
		
		if (document.getElementById("warning-message") != null) document.getElementById("warning-message").remove()
		if (document.getElementById("quickchat-message-footnote") != null) document.getElementById("quickchat-message-footnote").remove()

		document.getElementById("quickchat-messages").insertAdjacentHTML('beforeend',`<p class='quickchat-message human'>` + message + `</p><p id='quickchat-message-footnote'>Sending...</p>`)
		document.getElementById("quickchat-messages").scroll({ top: document.getElementById("quickchat-messages").scrollHeight, behavior: 'smooth' })

		setTimeout(function(){
			document.getElementById("quickchat-message-footnote").innerHTML = "Delivered&nbsp;&nbsp;"+time_now
		}, 1500);
		
		if (!HUMAN_OPERATOR) {
			quickchat_busy = true
			document.getElementById("quickchat-input").disabled = true
			document.getElementById("quickchat-send-msg-btn").disabled = true
			setTimeout(function(){ 
				if (quickchat_busy) {
					showPreloader(true)
				}
			}, 4000);
		}

	    var xmlhttp = new XMLHttpRequest();
	    xmlhttp.onreadystatechange = function() {
	        if (xmlhttp.readyState == XMLHttpRequest.DONE) {   // XMLHttpRequest.DONE == 4
	        	if (xmlhttp.status == 200) {
	        		var data = JSON.parse(xmlhttp.response)
                    if ("reply" in data) {
                        var timeout = data.src == 1 ? 0 : 3000

                        setTimeout(function(){
                            quickchat_busy = false
                            showPreloader(false)
                            if (document.getElementById("quickchat-message-footnote") != null) document.getElementById("quickchat-message-footnote").remove()
                            document.getElementById("quickchat-input").disabled = false
                            // document.getElementById("quickchat-input").focus()
                            document.getElementById("quickchat-send-msg-btn").disabled = false
                            if (data["reply"] != "") {
	                            document.getElementById("quickchat-messages").insertAdjacentHTML('beforeend',`
	                                <div class='message-container'>
	                                    <img src='${document.getElementById("quickchat-avatar-img").getAttribute("src")}' class='quickchat-profile-picture-sm' />
	                                    <div class='quickchat-status-sm'></div>
	                                    <p class='quickchat-message bot'>${data["reply"]}</p>
	                                </div>`)
	                          }
                            if (pending_alert != null) {
                            	document.getElementById("quickchat-messages").insertAdjacentHTML('beforeend',`<p class="quickchat-messages-alert"><span>${pending_alert}</span></p>`)
                            	pending_alert = null
                            }
                            document.getElementById("quickchat-messages").scroll({ top: document.getElementById("quickchat-messages").scrollHeight, behavior: 'smooth' })
                        }, timeout);
					}

	           }
	        }
	    };
	    xmlhttp.open("POST", `https://${API_SERVER_URL}/chat/`, true);
	    var params = `client_timestamp=${Date()}&scenario_id=${SCENARIO_ID}&api_key=${API_KEY}&conv_id=${document.getElementById("quickchat-modal-div").getAttribute("conv_id")}&ord_number=${document.getElementsByClassName("quickchat-message").length + 1}&text=${message}`
    	xmlhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
	    xmlhttp.send(params);

	}
}

/*!
	autosize 4.0.2
	license: MIT
	http://www.jacklmoore.com/autosize
*/
!function(e,t){if("function"==typeof define&&define.amd)define(["module","exports"],t);else if("undefined"!=typeof exports)t(module,exports);else{var n={exports:{}};t(n,n.exports),e.autosize=n.exports}}(this,function(e,t){"use strict";var n,o,p="function"==typeof Map?new Map:(n=[],o=[],{has:function(e){return-1<n.indexOf(e)},get:function(e){return o[n.indexOf(e)]},set:function(e,t){-1===n.indexOf(e)&&(n.push(e),o.push(t))},delete:function(e){var t=n.indexOf(e);-1<t&&(n.splice(t,1),o.splice(t,1))}}),c=function(e){return new Event(e,{bubbles:!0})};try{new Event("test")}catch(e){c=function(e){var t=document.createEvent("Event");return t.initEvent(e,!0,!1),t}}function r(r){if(r&&r.nodeName&&"TEXTAREA"===r.nodeName&&!p.has(r)){var e,n=null,o=null,i=null,d=function(){r.clientWidth!==o&&a()},l=function(t){window.removeEventListener("resize",d,!1),r.removeEventListener("input",a,!1),r.removeEventListener("keyup",a,!1),r.removeEventListener("autosize:destroy",l,!1),r.removeEventListener("autosize:update",a,!1),Object.keys(t).forEach(function(e){r.style[e]=t[e]}),p.delete(r)}.bind(r,{height:r.style.height,resize:r.style.resize,overflowY:r.style.overflowY,overflowX:r.style.overflowX,wordWrap:r.style.wordWrap});r.addEventListener("autosize:destroy",l,!1),"onpropertychange"in r&&"oninput"in r&&r.addEventListener("keyup",a,!1),window.addEventListener("resize",d,!1),r.addEventListener("input",a,!1),r.addEventListener("autosize:update",a,!1),r.style.overflowX="hidden",r.style.wordWrap="break-word",p.set(r,{destroy:l,update:a}),"vertical"===(e=window.getComputedStyle(r,null)).resize?r.style.resize="none":"both"===e.resize&&(r.style.resize="horizontal"),n="content-box"===e.boxSizing?-(parseFloat(e.paddingTop)+parseFloat(e.paddingBottom)):parseFloat(e.borderTopWidth)+parseFloat(e.borderBottomWidth),isNaN(n)&&(n=0),a()}function s(e){var t=r.style.width;r.style.width="0px",r.offsetWidth,r.style.width=t,r.style.overflowY=e}function u(){if(0!==r.scrollHeight){var e=function(e){for(var t=[];e&&e.parentNode&&e.parentNode instanceof Element;)e.parentNode.scrollTop&&t.push({node:e.parentNode,scrollTop:e.parentNode.scrollTop}),e=e.parentNode;return t}(r),t=document.documentElement&&document.documentElement.scrollTop;r.style.height="",r.style.height=r.scrollHeight+n+"px",o=r.clientWidth,e.forEach(function(e){e.node.scrollTop=e.scrollTop}),t&&(document.documentElement.scrollTop=t)}}function a(){u();var e=Math.round(parseFloat(r.style.height)),t=window.getComputedStyle(r,null),n="content-box"===t.boxSizing?Math.round(parseFloat(t.height)):r.offsetHeight;if(n<e?"hidden"===t.overflowY&&(s("scroll"),u(),n="content-box"===t.boxSizing?Math.round(parseFloat(window.getComputedStyle(r,null).height)):r.offsetHeight):"hidden"!==t.overflowY&&(s("hidden"),u(),n="content-box"===t.boxSizing?Math.round(parseFloat(window.getComputedStyle(r,null).height)):r.offsetHeight),i!==n){i=n;var o=c("autosize:resized");try{r.dispatchEvent(o)}catch(e){}}}}function i(e){var t=p.get(e);t&&t.destroy()}function d(e){var t=p.get(e);t&&t.update()}var l=null;"undefined"==typeof window||"function"!=typeof window.getComputedStyle?((l=function(e){return e}).destroy=function(e){return e},l.update=function(e){return e}):((l=function(e,t){return e&&Array.prototype.forEach.call(e.length?e:[e],function(e){return r(e)}),e}).destroy=function(e){return e&&Array.prototype.forEach.call(e.length?e:[e],i),e},l.update=function(e){return e&&Array.prototype.forEach.call(e.length?e:[e],d),e}),t.default=l,e.exports=t.default});
